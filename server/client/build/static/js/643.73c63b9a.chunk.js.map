{"version":3,"file":"static/js/643.73c63b9a.chunk.js","mappings":"gPA2KA,UAjKoB,SAAC,GAAmB,IAAlBA,EAAiB,EAAjBA,YACZC,GAAWC,EAAAA,EAAAA,MACjB,GAAsBC,EAAAA,EAAAA,UAAS,GAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAOG,EAAP,KACA,GADA,MAC8BH,EAAAA,EAAAA,UAAS,KAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA8BL,EAAAA,EAAAA,YAA9B,eAAOM,EAAP,KAAgBC,EAAhB,KAmBMC,GAAOC,EAAAA,EAAAA,MAAPD,GAEAE,EAAc,WAChBZ,GAASa,EAAAA,EAAAA,IAAcV,IACvB,IAAIW,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,CAAC,EACzDC,EAAYJ,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,EAC7DE,EAAUN,EACRO,EAAcb,EAAQc,KAAKC,MAAM,KAAKC,KAAK,KAQ9CH,KAAeP,EACdM,EAAQC,GAAalB,IAAMW,EAAKO,GAAalB,IAAMA,EAGnDiB,EAAQC,GAAe,CAAElB,IAAAA,EAAKK,QAAAA,GAElCS,aAAaQ,QAAQ,YAAYV,KAAKW,UAAUN,IAChDH,aAAaQ,QAAQ,YAAYV,KAAKW,UAAUP,EAAUhB,GAC7D,EAgBD,OAdAwB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,yCAAG,kGACd7B,EAAY,IADE,SAES8B,MAAM,qBAAD,OAAsBnB,IAFpC,cAERoB,EAFQ,OAGd/B,EAAY,IAHE,SAIK+B,EAASC,OAJd,OAIRC,EAJQ,OAKdjC,EAAY,IACZU,EAAWuB,EAAKxB,SAChBT,EAAY,KAPE,4CAAH,qDAUf6B,GACH,GAAE,CAAClB,KAGA,gBAAKuB,UAAU,YAAf,SAEQzB,GAAU,iBAAKyB,UAAU,gKAAf,WACV,gBAAKA,UAAU,kHAAf,UACI,gBAAKC,IAAK1B,EAAQ2B,aAAcC,IAAI,UAAUH,UAAU,yBAK5D,iBAAKA,UAAU,0HAAf,WACI,eAAIA,UAAU,WAAd,SAA0BzB,EAAQc,QAClC,eAAIW,UAAU,wBAAd,SAAuCzB,EAAQ6B,eAC/C,gBAAIJ,UAAU,gBAAd,yBAA2CzB,EAAQ8B,QACnD,iBAAKL,UAAU,sFAAf,WACI,eAAGA,UAAU,mCAAb,UACIM,MAAMC,KAAKC,MAAMjC,EAAQkC,YAAYC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAC7C,SAAC,MAAD,GAAmBA,EAD0B,IADrD,QAKA,cAAGb,UAAU,mCAAb,mCACA,cAAGA,UAAU,4BAAb,UAAyC,SAAC,KAAD,CAAMc,GAAE,kBAAevC,EAAQ8B,KAA/B,kCAE7C,iBAAKL,UAAU,qCAAf,WACI,eAAGA,UAAU,uBAAb,mBAAsCzB,EAAQwC,gBAA9C,SACA,eAAGf,UAAU,6BAAb,mBAA4CzB,EAAQyC,cAApD,YAEJ,iBAAKhB,UAAU,8FAAf,WACI,SAAC,MAAD,KACA,eAAGA,UAAU,GAAb,2BAA+BO,KAAKC,OAAQjC,EAAQyC,cAAgBzC,EAAQwC,iBAAmBxC,EAAQyC,cAAiB,KAAxH,2BAEJ,iBAAKhB,UAAU,0DAAf,WACI,gBAAIA,UAAU,gBAAd,qBAAqC,iBAAMA,UAAU,aAAhB,qBACrC,iBAAKA,UAAU,oCAAf,WACI,cAAGA,UAAU,+EACb,cAAGA,UAAU,gFACb,cAAGA,UAAU,iFACb,cAAGA,UAAU,kFACb,cAAGA,UAAU,mFAGrB,iBAAKA,UAAU,qFAAf,WACI,gBAAIA,UAAU,gBAAd,oBAAoC,iBAAMA,UAAU,aAAhB,uBACpC,iBAAKA,UAAU,kEAAf,WACI,gBAAKA,UAAU,sFAAf,UACI,gCAEJ,gBAAKA,UAAU,sFAAf,UACI,gCAEJ,gBAAKA,UAAU,sFAAf,UACI,gCAEJ,gBAAKA,UAAU,sFAAf,UACI,iCAEJ,gBAAKA,UAAU,sFAAf,UACI,kCAEJ,cAAGA,UAAU,wBAAb,+BAGR,gBAAKA,UAAU,kCAAf,UACI,gBAAIA,UAAU,gBAAd,4BAA4C,iBAAMA,UAAU,wBAAhB,4BAEhD,iBAAKA,UAAU,gFAAf,WACI,iBAAKA,UAAU,gBAAf,WACI,gBAAIA,UAAU,gBAAd,wBAAwC,iBAAMA,UAAU,kBAAhB,SAAmC9B,QAC3E,eAAG8B,UAAU,iFAAb,WAA8F,SAAC,MAAD,CAAmBA,UAAU,eAAeiB,QAxHnJ,WAEP9C,EADAD,GAAO,EACA,EAGAA,EAAM,EAEpB,IAiHuB,IAA+JA,EAA/J,KAAoK,SAAC,MAAD,CAAe8B,UAAU,eAAeiB,QA5HrN,WACX9C,EAAOD,EAAM,EAChB,WA4HmB,iBAAK8B,UAAU,mCAAf,WAEI,SAAC,KAAD,CAAMc,GAAG,YAAT,UAAqB,mBAAQG,QAAS,kBAAMtC,EAAYJ,EAAQc,KAA1B,EAAiCW,UAAU,4GAA5D,wBACrB,mBAAQiB,QAAW,kBAAMtC,EAAYJ,EAAQc,KAA1B,EAAiCW,UAAU,6GAA9D,6BAQJ,iBAAKA,UAAU,gEAAf,WACI,iBAAKA,UAAU,gCAAf,WACI,kBAAOkB,MAAO7C,EAAS8C,KAAK,OAAO9B,KAAK,UAAUZ,GAAG,UAAU2C,YAAY,qBAAqBpB,UAAU,kEAAkEqB,SA9HnL,SAACC,GAClBhD,EAAWgD,EAAEC,OAAOL,MACvB,KA6H2B,mBAAQlB,UAAU,iHAAlB,uBAEK,IAAR5B,IAAgB,cAAG4B,UAAU,yBAAb,4DACR,IAAR5B,IAAiB,cAAG4B,UAAU,uBAAb,wHAMhC,SAAC,IAAD,KAGb,C","sources":["components/ProductPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { AiFillStar, AiFillMinusCircle } from 'react-icons/ai';\r\nimport { TbDiscount } from 'react-icons/tb';\r\nimport { IoMdAddCircle } from 'react-icons/io';\r\nimport { useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {cartIncrement} from '../states/actions/cartActions'\r\nimport Loading from './Loading';\r\n\r\nconst ProductPage = ({setProgress}) => {\r\n    const dispatch = useDispatch();\r\n    const [qty, setQty] = useState(1);\r\n    const [pin, setPin] = useState(null);\r\n    const [pincode, setPincode] = useState('');\r\n    const [product, setProduct] = useState();\r\n\r\n    const incQty = () => {\r\n        setQty(qty + 1);\r\n    }\r\n\r\n    const decQty = () => {\r\n        if (qty <= 1) {\r\n            setQty(1);\r\n        }\r\n        else {\r\n            setQty(qty - 1);\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setPincode(e.target.value);\r\n    }\r\n\r\n    let { id } = useParams();\r\n\r\n    const cartHandler = () => {\r\n        dispatch(cartIncrement(qty));\r\n        let cart = JSON.parse(localStorage.getItem('cartItems')) || {};\r\n        let cartCount = JSON.parse(localStorage.getItem('cartCount')) || 0;\r\n        let newCart = cart;\r\n        const productName = product.name.split(\" \").join('-');\r\n        // if(newCart === null){\r\n        //     newCart[productName] = { qty, product};\r\n            \r\n        // }\r\n        // else{\r\n        // }\r\n\r\n        if(productName in cart){\r\n            newCart[productName].qty = cart[productName].qty + qty;\r\n        }\r\n        else{\r\n            newCart[productName] = { qty, product};\r\n        }\r\n        localStorage.setItem('cartItems',JSON.stringify(newCart));\r\n        localStorage.setItem('cartCount',JSON.stringify(cartCount+qty));\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setProgress(10);\r\n            const response = await fetch(`/admin/getProduct/${id}`);\r\n            setProgress(40);\r\n            const data = await response.json();\r\n            setProgress(70);\r\n            setProduct(data.product);\r\n            setProgress(100);\r\n        }\r\n\r\n        fetchData();\r\n    }, [id])\r\n\r\n    return (\r\n        <div className='px-4 py-8'>\r\n            {\r\n                product ? <div className='w-5/6 flex flex-wrap mx-auto justify-between mdm:w-full lgt:w-full mdtlg:w-full mdm:items-center mdm:px-0 mdm:justify-center mdm:space-y-10 smm:px-4 lgm:pr-0'>\r\n                <div className='product-img flex justify-start items-start mdtlg:w-1/2 h-[82vh] shadow-xl shadow-gray-400 hover:shadow-gray-600'>\r\n                    <img src={product.productImage} alt='Product' className='h-full rounded-lg' />\r\n                </div>\r\n\r\n\r\n\r\n                <div className='product-info flex flex-col mdtlg:items-start items-start mdtlg:w-1/3 w-[65vh] mdm:w-full lgt:w-[50vh]  mdm:items-center'>\r\n                    <h1 className='text-2xl'>{product.name}</h1>\r\n                    <h2 className='text-lg text-gray-500'>{product.description}</h2>\r\n                    <h2 className='text-gray-400'>Product Id: {product._id}</h2>\r\n                    <div className='flex smm:flex-col gap-4 items-center smm:text-sm mt-6 cursor-pointer justify-center'>\r\n                        <p className='flex justify-center items-center'>{\r\n                            Array(Math.round(product.avgRating)).fill(0).map((_, index) => (\r\n                                <AiFillStar key = {index}/>\r\n                              ))\r\n                        } </p>\r\n                        <p className='review text-blue-500 text-center'>820 Reviews(1000) | </p>\r\n                        <p className='text-blue-400 text-center'><Link to = {`/review/${product._id}`}>Write a Review</Link></p>\r\n                    </div>\r\n                    <div className='flex gap-2 price mt-4 items-center'>\r\n                        <p className='text-lg text-red-500'>₹{product.discountedPrice}/-</p>\r\n                        <p className='line-through text-gray-500'>₹{product.originalPrice}/-</p>\r\n                    </div>\r\n                    <div className='offer bg-gray-200 w-fit p-1.5 flex items-center gap-2 smm:text-sm text-lg text-red-500 mt-1'>\r\n                        <TbDiscount />\r\n                        <p className=''>Special Offer {Math.round(((product.originalPrice - product.discountedPrice) / product.originalPrice) * 100)}% off on Category</p>\r\n                    </div>\r\n                    <div className='color flex flex-wrap flex-col mt-6 cursor-pointer gap-1'>\r\n                        <h2 className='text-gray-500'>COLOR: <span className='text-black'>Red</span></h2>\r\n                        <div className='color-box flex gap-3 items-center'>\r\n                            <p className='bg-red-500 border-gray-400 hover:border-black border h-5 w-5 rounded-full'></p>\r\n                            <p className='bg-blue-500 border-gray-400 hover:border-black border h-5 w-5 rounded-full'></p>\r\n                            <p className='bg-green-500 border-gray-400 hover:border-black border h-5 w-5 rounded-full'></p>\r\n                            <p className='bg-yellow-500 border-gray-400 hover:border-black border h-5 w-5 rounded-full'></p>\r\n                            <p className='bg-black border-gray-400 hover:border-black border h-5 w-5 rounded-full'></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='size flex flex-wrap flex-col mt-6 cursor-pointer gap-1 px-4 w-72 md:w-full md:px-0'>\r\n                        <h2 className='text-gray-500'>SIZE: <span className='text-black'>Large</span></h2>\r\n                        <div className='size-box flex flex-wrap gap-1 items-center text-sm md:text-base'>\r\n                            <div className='border border-gray-400 hover:border-black h-6 w-10 flex justify-center items-center'>\r\n                                <p>S</p>\r\n                            </div>\r\n                            <div className='border border-gray-400 hover:border-black h-6 w-10 flex justify-center items-center'>\r\n                                <p>M</p>\r\n                            </div>\r\n                            <div className='border border-gray-400 hover:border-black h-6 w-10 flex justify-center items-center'>\r\n                                <p>L</p>\r\n                            </div>\r\n                            <div className='border border-gray-400 hover:border-black h-6 w-10 flex justify-center items-center'>\r\n                                <p>XL</p>\r\n                            </div>\r\n                            <div className='border border-gray-400 hover:border-black h-6 w-10 flex justify-center items-center'>\r\n                                <p>XXL</p>\r\n                            </div>\r\n                            <p className='text-blue-400 md:ml-2'>Show Chart</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='stock mt-6 text-sm md:text-base'>\r\n                        <h2 className='text-gray-500'>AVAILABILITY: <span className='text-black md:text-lg'>In Stock</span></h2>\r\n                    </div>\r\n                    <div className=\"flex flex-col flex-wrap mt-6 justify-center items-center md:items-start gap-4\">\r\n                        <div className='flex flex-col'>\r\n                            <h2 className='text-gray-500'>QUANTITY: <span className='text-black ml-1'>{qty}</span></h2>\r\n                            <p className='flex justify-center items-center md:justify-start gap-1 text-lg cursor-pointer'><AiFillMinusCircle className='text-red-500' onClick={decQty} /> {qty} <IoMdAddCircle className='text-red-500' onClick={incQty} /></p>\r\n                        </div>\r\n                        <div className='flex gap-2 md:gap-4 items-center'>\r\n\r\n                            <Link to=\"/checkout\"><button onClick={() => cartHandler(product.name)} className=\"text-white bg-red-500 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded md:text-base text-sm\">Buy Now</button></Link>\r\n                            <button onClick = {() => cartHandler(product.name)} className=\"text-white bg-red-500 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded md:text-base text-sm \">Add to Cart</button>\r\n\r\n                            {/* <button className=\"rounded-full w-10 h-10 bg-gray-200 p-0 border-0 inline-flex items-center justify-center text-gray-500\">\r\n                                <svg fill=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                                    <path d=\"M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 00-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 000-7.78z\"></path>\r\n                                </svg>\r\n                            </button> */}\r\n                        </div>\r\n                        <div className='pincode flex flex-col gap-2 w-72 md:w-full md:px-0 mdm:w-full'>\r\n                            <div className='flex flex-wrap gap-2 md:gap-4'>\r\n                                <input value={pincode} type='text' name='pincode' id='pincode' placeholder='Enter your pincode' className='border border-gray-400 px-2 py-1 rounded-md focus:outline-black' onChange={handleChange} />\r\n                                <button className=\"text-white bg-red-500 w-20 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded md:text-base text-sm\">Check</button>\r\n                            </div>\r\n                            {pin === true && <p className='text-green-500 text-sm'>We are providing our service at this pincode.</p>}\r\n                            {pin === false && <p className='text-red-500 text-sm'>Sorry, Currently We are not providing our service at this pincode. It will be available soon.</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            : <Loading/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage"],"names":["setProgress","dispatch","useDispatch","useState","qty","setQty","pin","pincode","setPincode","product","setProduct","id","useParams","cartHandler","cartIncrement","cart","JSON","parse","localStorage","getItem","cartCount","newCart","productName","name","split","join","setItem","stringify","useEffect","fetchData","fetch","response","json","data","className","src","productImage","alt","description","_id","Array","Math","round","avgRating","fill","map","_","index","to","discountedPrice","originalPrice","onClick","value","type","placeholder","onChange","e","target"],"sourceRoot":""}