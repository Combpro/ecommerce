{"version":3,"file":"static/js/881.115e4e5c.chunk.js","mappings":"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","sources":["components/Review.jsx","states/actions/reviewClicked.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { useAsyncError, useParams } from 'react-router-dom';\r\nimport { GiEarthAmerica } from 'react-icons/gi';\r\nimport Loading from './Loading';\r\nimport {AiFillStar} from 'react-icons/ai';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { reviewClickedTrue } from '../states/actions/reviewClicked';\r\n\r\nconst Review = () => {\r\n    const reviewClickedDispatch = useDispatch();\r\n    const [reviewDetail, setReviewDetail] = useState({\r\n        review: ''\r\n    })\r\n    const [change, setChange] = useState(false);\r\n    const [currentValue, setCurrentValue] = useState(0);\r\n    const [hoverValue, setHoverValue] = useState(undefined);\r\n    const stars = Array(5).fill(0);\r\n\r\n    const [product, setProduct] = useState();\r\n    const {id} = useParams();\r\n\r\n    const options = {\r\n        position: \"top-right\",\r\n        autoClose: 10000,\r\n        pauseOnHover: true,\r\n        draggable: false,\r\n        theme: \"dark\",\r\n      };\r\n\r\n    const onChangeHandler = (e) => {\r\n        setChange(true);\r\n        setReviewDetail({ ...reviewDetail, [e.target.id]: e.target.value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(`/admin/getProduct/${id}`);\r\n            const data = await response.json();\r\n            setProduct(data.product);\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleValidation = () => {\r\n        const { review } = reviewDetail;\r\n    \r\n        if (change && review.length < 3) {\r\n          toast.error(\"Review should be of atleast 3 in length\", options);\r\n          return false;\r\n        } \r\n        else if(currentValue === 0){\r\n            toast.error(\"Please! Give rating also\");\r\n            return false;\r\n        }\r\n    \r\n        return true;\r\n      };\r\n\r\n    const handleSubmit  = async(e, id) => {\r\n        e.preventDefault();\r\n        if(handleValidation()){\r\n            const response = await fetch(`/admin/rating/${id}`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({rating: currentValue})\r\n            })\r\n            if(response.status === 200){\r\n                reviewClickedDispatch(reviewClickedTrue());\r\n            }\r\n            const data = await response.json();\r\n\r\n            if(change){\r\n                const res = await fetch(`/admin/review/${id}`, {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({review: reviewDetail.review})\r\n                })\r\n\r\n                const dta = await res.json();\r\n            }\r\n            setCurrentValue(0);\r\n            toast.success(\"Rating has been submited successfully\");\r\n        }\r\n    }\r\n\r\n    const handleClick = (value) => {\r\n        setCurrentValue(value);\r\n    }\r\n\r\n    const handleMouseOver = (value) => {\r\n        setHoverValue(value);\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        setHoverValue(undefined);\r\n    }\r\n\r\n    return (\r\n        <div className='p-8 flex flex-col smm:p-4 justify-center w-[50vw] mx-auto mdm:w-full'>\r\n            <div className='review-heading flex flex-col justify-center items-center'>\r\n                <h1 className='text-royal-blue mdm:text-2xl md:text-4xl font-semibold'>Review</h1>\r\n                <p className='border-b-4 border-red-500 w-20 mx-auto mt-2'></p>\r\n            </div>\r\n            {\r\n                product ? <div className='product-detail mt-4 bg-gray-100 p-4 rounded-xl'>\r\n                <div className='product-desc flex flex-col justify-center py-2 px-3'>\r\n                    <div className='product flex gap-4 items-center'>\r\n                        <img className='h-10 w-10 rounded-md' src={product.productImage} alt='productImg' />\r\n                        <h1 className='text-2xl smm:text-lg'>{product.name}</h1>\r\n                    </div>\r\n                    <div className='product-public flex items-center mt-2 text-gray-500 gap-2'>\r\n                        <h3><GiEarthAmerica /></h3>\r\n                        <h3>Your review will be posted publicy on the web.</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='product-review p-3'>\r\n                    <div className='stars flex mb-4 text-3xl smm:text-sm'>\r\n                        {\r\n                            stars.map((_, index) => (\r\n                                <AiFillStar key={index} onClick={() => handleClick(index + 1)} onMouseOver={() => handleMouseOver(index + 1)} onMouseLeave={handleMouseLeave} className={(hoverValue || currentValue) > index ? 'text-orange-500' : 'text-gray-500'}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div >\r\n                        <textarea name=\"review\" id=\"review\" rows=\"5\" placeholder=\"Write a Review\" className=\"w-full p-3 placeholder:text-lg border border-gray-300 rounded-lg focus:outline-none\"\r\n                            onChange={onChangeHandler}\r\n                            value={reviewDetail.review}\r\n                        ></textarea>\r\n                    </div>\r\n                    <button onClick={(e) => handleSubmit(e, product._id)} className='bg-red-500 text-white px-4 py-2 mt-2 rounded-md mdm:text-sm text-lg border-2 hover:text-red-500 hover:bg-white border-red-500'>Submit Review</button>\r\n                </div>\r\n            </div>\r\n            \r\n            : <Loading />\r\n            }\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Review","export const reviewClickedTrue = ()=>{\r\n    return ({\r\n        type : 'clicked',\r\n    })\r\n}\r\n\r\nexport const reviewClickedFalse = ()=>{\r\n    return ({\r\n        type : 'unClicked',\r\n    })\r\n}"],"names":["reviewClickedDispatch","useDispatch","useState","review","reviewDetail","setReviewDetail","change","setChange","currentValue","setCurrentValue","undefined","hoverValue","setHoverValue","stars","Array","fill","product","setProduct","id","useParams","options","position","autoClose","pauseOnHover","draggable","theme","useEffect","fetchData","fetch","response","json","data","handleValidation","length","toast","handleSubmit","e","preventDefault","method","credentials","headers","body","JSON","stringify","rating","status","reviewClickedTrue","res","handleMouseLeave","className","src","productImage","alt","name","map","_","index","onClick","onMouseOver","onMouseLeave","rows","placeholder","onChange","target","value","_id","type","reviewClickedFalse"],"sourceRoot":""}